=== Thiết lập và cấu hình tài khoản

(((GitHub, user accounts)))
Việc đầu tiên bạn cần làm phải có một tài khoản miễn phí.
Để đăng kí tài khoản, vui lòng truy cập địa chỉ https://github.com[], chọn username (tên tài khoản) mà chưa có ai chọn, cung cấp địa chỉ email của bạn và password, và click vào nút màu xanh ``Sign up for GitHub''.

.Form đăng kí của GitHub.
image::images/signup.png[Form đăng kí của GitHub.]

Trang tiếp theo bạn thấy sẽ là các gói lựa chọn cho các dịch vụ cao cấp, các gói cung cấp các dịch vụ cao cấp này mất tiền tùy thuộc vào từng gói bạn chọn, nếu không sử dụng một trong các gói này và tiếp tục chỉ sử dụng các dịch vụ miễn phí, bạn bỏ qua trang này.
GitHub sẽ gửi cho bạn một thư điện tử vào địa chỉ email để xác minh tài khoản.
Kiểm tra email của mình và thực hiện các bước theo hướng dẫn trong thư GitHub gửi.

[NOTE]
====
Đối với tài khoản miễn phí GitHub cung cấp tất cả các chức năng nó có, chỉ duy nhất các dự án của bạn sẽ công khai với tất cả mọi người, tức là ai cũng có thể truy cập.
Đối với các gói lựa chọn trả phí thì nó cho phép dự án của bạn giới hạn truy cập dự án của mình đối với người khác.
====

Click vào `Octocat logo` ở góc trái bên trên màn hình để truy cập bảng điều khiển (dashboard).
Bây giờ, tài khoản Github của bạn sẵn sàng để sử dụng.

==== SSH Access

(((SSH keys, with GitHub)))
Kể từ giờ, bạn hoàn toàn có thể kết nối với Git repository sử dụng giao thức `https://`, sử dụng username và password bạn vừa tạo để xác thực.
Mặc dù vậy, để clone một dự án công khai, bạn không cần đăng kí tài khoản, tài khoản chỉ có tác dụng khi fork dự án hoặc đẩy fork của bạn tới dự án gốc.

Nếu bạn muốn sử dụng SSH remote, bạn sẽ cần cấu hình một public key.
(Nếu bạn vẫn chưa có public key nào, xem phần <<ch04-git-on-the-server#_generate_ssh_key>>.)
Mở phần cài đặt tài khoản, như hình dưới:

.Mở `cài đặt` tài khoản.
image::images/account-settings.png[Mở `cài đặt` tài khoản.]

Sau đó chọn mục ``SSH keys'' ở cột bên tay trái.

.The ``SSH keys'' link.
image::images/ssh-keys.png[The ``SSH keys'' link.]

Ở đó, click vào nút "`Add an SSH key`", đặt tên cho key, dán nội dung của tệp public key `~/.ssh/id_rsa.pub` (hoặc tên bất kì mà bạn đã đặc khác) vào vùng `key`, cuối cùng click vào nút ``Add key''.

[NOTE]
====
Bạn nên đặt tên SSH key dễ nhớ (như "My Laptop" or "Work Account"), để sau khi ghi cần gọi lại, bạn có thể dễ dàng tìm lại.
====

[[_personal_avatar]]
==== Hình đại diện (avatar) của bạn

Mặc định, Github tạo cho bạn một hình đại diện, bạn có thể thay thế theo ý mình.
Để thay hình đại diện: tới ``Profile'' tab (ở trên SSH Keys tab), rồi click vào ``Upload new picture''.

.Vị trí ``Profile'' tab.
image::images/your-profile.png[Vị trí ``Profile'' tab.]

Chọn ảnh mà bạn muốn làm ảnh đại diện, sau đó Github cho phép bạn cắt ảnh.

.Cắt ảnh đại diện
image::images/avatar-crop.png[Cắt ảnh đại diện.]

Bây giờ, mọi người trên Github sẽ thấy username và hình dại diện mới của bạn.

Nếu bạn đã tải hình đại diện tới dịch vụ Gravatar (thường được sử dụng cho các tài khoản wordpress), thì hình đại diện đó sẽ mặc định được sử dụng và bạn không cần thực hiện bước này.

==== Địa chỉ email của bạn

Github liên kết các commit bằng địa chỉ email.
Nếu bạn sử dụng nhiều địa chỉ email cho commit của mình và muốn Github liên kết chúng đúng, bạn cần thêm tất cả các địa chỉ email bạn đã sử dụng tới phần Emails như hình dưới.

[[_add_email_addresses]]
.Thêm địa chỉ email
image::images/email-settings.png[Thêm địa chỉ email.]

Trong <<_add_email_addresses>> ta có thể thấy có một vài trạng thái mà email có thể có.
Địa chỉ trên cùng đã được xác minh và được thiết lập là địa chỉ email gốc, nghĩa là bạn sẽ nhận được các thông báo và các công thức từ đây.
Địa chỉ thứ hai cũng đã được xác minh và điều đó cho phép bạn có quyền thiết lập email này là email gốc thay thế email đầu tiên.
Địa chỉ email cuối cùng vẫn chưa được xác minh, nghĩa là bạn không thể thiết lập nó là email gốc được.
Nếu Github nhìn thất bất kì email nào trong số các email này trong thông điệp commit ở bất kì repository nào tên Github thì nó sẽ được liên kết tới người dùng ngay.

==== Xác thực hai lần

Cuối cùng, để nâng cao độ bảo mật, bạn nên thiết lập `xác thực hai lần` hoặc ``2FA''.
Xác thực hai lần là một kỹ thuật xác thực ngày càng trở nên phổ biến để giảm nguy cơ tài khoản của bạn bị làm hại nếu mật khẩu bị đánh cắp.

Bạn có thể thiết lập về xác thực hai lần ở ``Security'' tab trong phần cài đặt tài khoản `Account settings`.

.2FA trong Security Tab
image::images/2fa-1.png[2FA trong Security Tab]

Khi bạn click vào nút ``Set up two-factor authentication'', nó sẽ mang bạn tới trang cấu hình, ở đây bạn có thể chọn sử dụng ứng dụng điện thoại để tạo mã thứ hai, hoặc Github gửi mã cho bạn thông qua tin nhắn SMS.

Sau khi bạn chọn phương pháp xác thực hai lần xong, tài khoản của bạn giờ đã an toàn hơn. Từ giờ, bạn muốn đăng nhập tài khoản thì sẽ phải cung cấp thêm một mã ngoài password.
