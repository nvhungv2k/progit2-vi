=== Cài Git

Trước khi bắt đầu sử dụng Git, bạn phải làm cho nó có ở trên máy tính của mình.
Thậm chí nếu nó đã được cài, tốt hơn là cập nhật phiên bản mới nhất.
Bạn có thể cài nó bằng nhiều cách: cài bằng gói đã được đóng sẵn (package), hoặc qua bộ cài đặt khác, hoặc tải mã nguồn rồi tự biên dịch.

[NOTE]
====
Cuốn sách này được viết sử dụng Git phiên bản *2.0.0*.
Mặc dù, hầu hết các lệnh chúng tôi sử dụng làm việc tốt với các phiên bản trước, nhưng một vài có thể không hoặc hành vi của chúng có khác đôi chút nếu bạn sử dụng phiên bản Git cũ hơn.
Vì Git rất tuyệt hảo trong việc duy trì tương thích cho nên bất kì phiên bản nào mới hơn 2.0 đều ổn.
====

==== Cài Git trên Linux

(((Linux, installing)))
Nếu bạn muốn cài các công cụ cơ bản của git trên Linux thông qua binary installer, nhìn chung bạn có thể thực hiện thông qua công cụ quản lí gói (package management tool) có sẵn trong phân phối Linux bạn đang dùng.
Nếu bạn sử dụng Fedora (hoặc bất kì phân phối nào dựa trên RPM như RHEL hoặc CentOS), bạn có thể sử dụng `dnf`:

[source,console]
----
$ sudo dnf install git-all
----

Nếu bạn sử dụng phân phối nào dựa trên Debian, như Ubuntu, thử `apt`:

[source,console]
----
$ sudo apt install git-all
----

Với một số hệ điều hành Linux, Unix khác, lệnh cài đặt có tại địa chỉ http://git-scm.com/download/linux[].

==== Cài trên Mac

(((Mac, installing)))
Có vài cách để cài Git trên Mac.
Cách dễ dàng nhất có lẽ là cài Xcode Command Line Tools.(((Xcode)))
Trên Mavericks (10.9) hoặc cao hơn bạn có thể làm điều này đơn giản bằng thử chạy lệnh 'git' từ Terminal.

[source,console]
----
$ git --version
----

Nếu bạn chưa cài nó, nó sẽ nhắc bạn cài nó.

Nếu bạn muốn nâng cấp phiên bản, bạn có thể cài nó sử dụng binary installer tại địa chỉ http://git-scm.com/download/mac[].

.Git macOS Installer.
image::images/git-osx-installer.png[Git macOS installer.]

You can also install it as part of the GitHub for Mac install.
Their GUI Git tool has an option to install command line tools as well.
You can download that tool from the GitHub for Mac website, at http://mac.github.com[].

==== Installing on Windows

There are also a few ways to install Git on Windows.(((Windows, installing)))
The most official build is available for download on the Git website.
Just go to http://git-scm.com/download/win[] and the download will start automatically.
Note that this is a project called Git for Windows, which is separate from Git itself; for more information on it, go to https://git-for-windows.github.io/[].

To get an automated installation you can use the https://chocolatey.org/packages/git[Git Chocolatey package].
Note that the Chocolatey package is community maintained.

Another easy way to get Git installed is by installing GitHub Desktop.
The installer includes a command line version of Git as well as the GUI.
It also works well with Powershell, and sets up solid credential caching and sane CRLF settings.(((Powershell)))(((CRLF)))(((credential caching)))
We'll learn more about those things a little later, but suffice it to say they're things you want.
You can download this from the https://desktop.github.com/[GitHub Desktop website].

==== Installing from Source

Some people may instead find it useful to install Git from source, because you'll get the most recent version.
The binary installers tend to be a bit behind, though as Git has matured in recent years, this has made less of a difference.

If you do want to install Git from source, you need to have the following libraries that Git depends on: autotools, curl, zlib, openssl, expat, and libiconv.
For example, if you're on a system that has `dnf` (such as Fedora) or `apt-get` (such as a Debian-based system), you can use one of these commands to install the minimal dependencies for compiling and installing the Git binaries:

[source,console]
----
$ sudo dnf install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel
$ sudo apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev
----

In order to be able to add the documentation in various formats (doc, html, info), these additional dependencies are required (Note: users of RHEL and RHEL-derivatives like CentOS and Scientific Linux will have to https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F[enable the EPEL repository] to download the `docbook2X` package):

[source,console]
----
$ sudo dnf install asciidoc xmlto docbook2X
$ sudo apt-get install asciidoc xmlto docbook2x
----

If you're using a Debian-based distribution (Debian/Ubuntu/Ubuntu-derivatives), you also need the `install-info` package:

[source,console]
----
$ sudo apt-get install install-info
----

If you're using a RPM-based distribution (Fedora/RHEL/RHEL-derivatives), you also need the `getopt` package (which is already installed on a Debian-based distro):

[source,console]
----
$ sudo dnf install getopt
$ sudo apt-get install getopt
----

Additionally, if you're using Fedora/RHEL/RHEL-derivatives, you need to do this

[source,console]
----
$ sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
----

due to binary name differences.

When you have all the necessary dependencies, you can go ahead and grab the latest tagged release tarball from several places.
You can get it via the kernel.org site, at https://www.kernel.org/pub/software/scm/git[], or the mirror on the GitHub website, at https://github.com/git/git/releases[].
It's generally a little clearer what the latest version is on the GitHub page, but the kernel.org page also has release signatures if you want to verify your download.

Then, compile and install:

[source,console]
----
$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
----

After this is done, you can also get Git via Git itself for updates:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
----
