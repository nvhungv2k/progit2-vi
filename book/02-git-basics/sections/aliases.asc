[[_git_aliases]]
=== Git Aliases

(((aliases)))
Trước khi kết thúc chương này, có một mẹo nhỏ có thể giúp bạn trải nghiệm Git đơn giản hơn, dễ dàng hơn và quen thuộc hơn là: aliase
Chúng ta sẽ không nói tới chúng hoặc cho rằng bạn đã sử dụng chúng ở phân sau trong sách này, nhưng có lẽ bạn nên biết làm thế nào để sử dụng chúng.

Git không tự động suy luận ra lệnh mà bạn chỉ nhập một phần của lệnh.
Nếu bạn không muốn nhập đầy đủ lệnh, thì bạn thiết lập các alias cho mỗi lệnh sử dụng lệnh `git config`.(((git commands, config)))
Đây là hai ví dụ bạn có thể sử dụng alias:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Khi thiết lập alias cho lệnh `git commit` như trên, giờ bạn chỉ cần nhập `git ci` là Git sẽ hiểu là bạn dùng lệnh `git commit`. Trong quá trình sử dụng Git, nếu bạn sử dụng lệnh nào thường xuyên thì sử dụng alias cho lệnh đó sẽ rất hữu ích.

Kỹ thuật này cũng rất hữu ích trong việc tạo các lệnh mà bạn nghĩa nên tồn tại.
Ví dụ, để chỉnh sửa lại vấn đề không ổn định bạn gặp phải với unstaging một tệp, bạn có thể thêm unstage alias của riêng bạn tới Git:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Nó tương đương với hai lệnh sau:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Cái này đường như sáng sủa hơn.
Nó cũng phổ biến khi thêm một lệnh `last`, giống như sau:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Cách này, bạn có thể nhìn thấy commit cuối cùng dễ dàng:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Giống như bạn nói, Git đơn giản thay lệnh mới bằng bất kì lệnh nào mà nó thay thế cho.
Mặc dù vậy, có thể bạn muốn chạy một lệnh bên ngoài, chứ không phải là lệnh sẵn có của Git.
Trong trường hợp đó, bạn bắt đầu lệnh với kí tự `!`.
Nó rất hữu ích nếu bạn viết công cụ riêng cho mình để  làm việc với Git repository.
Chúng ta có thể minh họa bằng cách alias lệnh `git visual` để chạy lệnh `gitk` như sau:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
