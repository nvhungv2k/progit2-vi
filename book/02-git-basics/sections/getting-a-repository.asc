[[_getting_a_repo]]
=== Tạo Git Repository


Có 02 cách để tạo Git repository:

1. Biến một thư mục chưa được version-controlled thành Git repository, hoặc
2. Clone một Git repository bất kì.


==== Tạo một Repository từ thư mục

Nếu bạn có một thư mục project mà chưa được version-controlled và bây giờ bạn muốn version-controlled nó bằng Git, đầu tiên bạn cần tới thư mục đó bằng cách chạy lệnh:

Với hệ điều hành Linux:
[source,console]
----
$ cd /home/user/my_project
----
Với hệ điều hành Mac:
[source,console]
----
$ cd /Users/user/my_project
----
Với hệ điều hành Windows:
[source,console]
----
$ cd /c/user/my_project
----

Sau đó, nhập lệnh:

[source,console]
----
$ git init
----

Lệnh này sẽ tạo ra một thư mục `.git` chứa tất cả các file cần thiết cho một repository.
Lúc này, project của bạn vẫn chưa được version-controll.
 
(Xem <<ch10-git-internals#ch10-git-internals>> để biết thêm thông tin về file nào chứa trong thư mục `.git` vừa mới được tạo ra)(((git commands, init)))

Để bắt đầu version-control các file có sẵn trong thư mục sử dụng lệnh `git add` để track và đưa nó vào trạng thái staged, tiếp theo là lệnh `git commit` để commit:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'
----

Sau khi chạy các lệnh này, bạn đã có một Git repository với các file đã được track và một commit đầu tiên.

[[_git_cloning]]
==== Clone một Repository đã có sẵn

Nếu bạn muốn có một bản sao của một Git repository đã tồn tại -- Ví dụ, một project bạn muốn đóng góp cho nó -- lệnh cần sử dụng là `git clone`.
Nếu bạn đã quen thuộc với các VCS khác như Subversion, bạn sẽ thấy rằng lệnh là "clone" và không "checkout".
Đây là khác biệt quan trọng -- thay cho việc lấy bản sao làm việc, Git sẽ nhận toàn bộ bản sao của tất cả các dữ liệu mà server có.
Mọi phiên bản của các file trong project sẽ được sao xuống máy tính của bạn khi chạy lệnh `git clone`.
Trong trường hợp,nếu ổ đĩa của server của bạn bị lỗi, bạn có thể sử dụng gần như bất kì một bản sao nào ở một client khác để khôi phục lại trạng thái của server ở thời điểm nó được sao chép (bạn có thể mất những thứ không được version-control, nhưng tất cả dữ liệu đã được version-control thì sẽ không bao giờ bị mất -- xem <<ch04-git-on-the-server#_getting_git_on_a_server>> để biết chi tiết hơn).

Bạn clone một repository với lệnh `git clone <url>`.(((git commands, clone)))
Ví dụ, bạn muốn clone một thư viện của Git tên nó là `libgit2`, bạn chạy lệnh:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Lệnh này sẽ tạo một thư mục ten là `libgit2`, bên trong nó có một thư mục tên là `.git`, sao chép toàn bộ dữ liệu xuống máy tính của bạn và checkout phiên bản mới nhất cho bạn.
Thư mục `libgit2` vừa mới được tạo chứa các file của project sẵn sàng để làm việc với nó.

Nếu bạn muốn clone một repository vào một thư mục có tên tùy chọn mà không phải tên mặc định là `libgit2` như trên, bạn chỉ rõ tên muốn đặt trong argument của lệnh `git clone` như sau:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Lệnh này tạo một thư mục có tên là `mylibgit` với nội dung giống hệt như với thư mục `libgit2` ở trên.

Git có nhiều giao thức truyền dữ liệu khác nhau có thể sử dụng.
Ví dụ trên sử dụng giao thức `https;//`, nhưng bạn cũng có thể thấy `git://` hoặc `user@server:path/to/repo.git` sử dụng giao thức SSH.
<<ch04-git-on-the-server#_getting_git_on_a_server>> sẽ giới thiệu toàn bộ các option sẵn có mà server có thể dùng để truy cập Git repository của bạn và pros và cons.
